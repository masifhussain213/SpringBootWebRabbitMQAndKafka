server:
  port: 5757

logging.level.root: INFO

management:
  endpoints:
    web:
      exposure:
        include: "*"
custom:
  security:
    masterUser:
      username: master@localhost.com
      password: root
      roles:
        - MASTER
        - DEVELOPER
        - CUSTOMER
    jwt:
      header:
        key: Authorization
        value:
          prefix: Bearer
      algorithm : RSA512
      token:
        aliveFor: 3600
        issuer: ExampleApplication@localhost
        audience:
          - banana
          - banana1
          - banana2
        scope:
          - ui
      keys:
        public:
          path: /banana
        private:
          path: /banana

spring:
  mail:
    host: localhost
    port: 1025
    username:
    password:
    properties:
      mail:
        smtp:
          auth: false
          connectiontimeout: 5000
          timeout: timeout
          writetimeout: 5000
  security:
    xtype: BASIC
    user:
      name: root
      password: root
  datasource:
    url: jdbc:mariadb://localhost:3306/ExampleDatabase
    username: root
    password: root
    driver-class-name: org.mariadb.jdbc.Driver
    validationQuery: SELECT 1
  application:
    name: ExampleApp
  h2:
    console:
      enabled: true
  cloud:
    stream:
      defaultBinder: rabbit
      bindings:
        globalEventsInput:
          binder: kafka
          destination: global_events
          content-type: application/json
          group: input-group-1
        globalEventsOutput:
          binder: kafka
          destination: global_events
          group: output-group-1
          content-type: application/json
        paymentsReceived:
          binder: rabbit
          destination: queue.payment.received
          group: payments
        paymentValidated:
          binder: rabbit
          destination: queue.payment.validated
          group: payments

      binders:
        kafka:
          type: kafka
          environment:
            spring.cloud.stream.kafka:
              binder:
                brokers: localhost
                defaultBrokerPort: 9092
              bindings:
                globalEventsOutput:
                  producer:
                    configuration:
                      key.serializer: org.apache.kafka.common.serialization.StringSerializer
                globalEventsInput:
                  consumer:
                    configuration:
                      isolation.level: read_committed # In case of Transactional Produced, Otherwise read_uncommitted
        rabbit:
          type: rabbit
          environment:
            spring:
              cloud:
                stream:
                  rabbit:
                    bindings:
                      paymentsReceived:
                        consumer:
                          autoBindDlq: true
                          requeueRejected: true
                          republishToDlq: true
                      paymentValidated:
                        producer:
                          autoBindDlq: true
                          republishToDlq: true
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest